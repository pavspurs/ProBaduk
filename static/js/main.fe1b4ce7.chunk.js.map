{"version":3,"sources":["components/SignIn.js","components/Title.js","components/Main.js","App.js","index.js","stores/UserStore.js"],"names":["React","Component","Title","titleUpdater","initialTitle","useState","title","setTitle","useEffect","document","querySelector","textContent","useTitle","setInterval","Main","inject","observer","this","props","userStore","usermail","className","class","href","target","width","height","src","frameborder","allow","allowfullscreen","App","observable","action","ReactDOM","render","getElementById"],"mappings":"ySAMqBA,IAAMC,U,mDCkBZC,EARD,WAGV,IAAMC,EAfO,SAAAC,GAAgB,MAGHC,mBAASD,GAHN,mBAGtBE,EAHsB,KAGfC,EAHe,KAS7B,OADAC,qBAJoB,WACEC,SAASC,cAAc,SAC/BC,YAAcL,IAEL,CAACA,IACjBC,EAMcK,CAAS,uCAE9B,OADAC,aAAY,kBAAMV,EAAa,6FAAsB,KAC9C,IC4DIW,EA1EdC,YAAO,Y,GACPC,Y,yKAGyBC,KAAKC,MAAnBC,UACAC,SACR,OAAQ,gCACN,mCACG,cAAC,EAAD,IACD,qBAAKC,UAAU,SACf,sBAAKA,UAAU,SAAf,UAEE,gGACe,uBADf,8BAGA,qBAAKC,MAAM,SAAX,SACE,+BACE,yCACA,yCACA,yCACA,yCACA,yCACA,yCACA,uBACA,6BAAI,mBAAGC,KAAK,8BAA8BC,OAAO,SAASH,UAAU,QAAhE,wFAOZ,iCACE,yBAASA,UAAU,QAAnB,SACE,sBAAKA,UAAU,UAAf,UACE,sBAAKA,UAAU,gBAAf,UACE,sEACA,sDAEF,qBAAKA,UAAU,eAAf,SACE,wBAAQI,MAAM,MAAMC,OAAO,MAAMC,IAAI,4CAA4CC,YAAY,IAAIC,MAAM,2FAA2FC,iBAAe,WAIvN,yBAAST,UAAU,QAAnB,SACE,sBAAKA,UAAU,UAAf,UACE,sBAAKA,UAAU,gBAAf,UACE,6HACA,oDAEF,qBAAKA,UAAU,eAAf,SACE,wBAAQI,MAAM,MAAMC,OAAO,MAAMC,IAAI,4CAA4CC,YAAY,IAAIC,MAAM,2FAA2FC,iBAAe,WAIvN,yBAAST,UAAU,QAAnB,SACE,sBAAKA,UAAU,UAAf,UACE,sBAAKA,UAAU,gBAAf,UACE,6KACA,+CAEF,qBAAKA,UAAU,eAAf,SACE,wBAAQI,MAAM,MAAMC,OAAO,MAAMC,IAAI,4CAA4CC,YAAY,IAAIC,MAAM,2FAA2FC,iBAAe,WAKvN,iCACE,4BAAG,yJ,GAjEM9B,IAAMC,a,MCmCV8B,G,8KAjCX,OACA,qBAAKV,UAAU,qBAAf,SAAoC,cAAC,EAAD,U,GAHtBrB,IAAMC,Y,gCCFlBkB,EAAY,ICLlB,qJAMGa,KANH,wEAMyB,MANzB,yCAQGC,KARH,oFAQwB,SAACb,GACrB,EAAKA,SAAWA,MATpB,GDOAc,IAASC,OACP,cAAC,IAAD,CAAUhB,UAAWA,EAArB,SACE,cAAC,EAAD,MAEFV,SAAS2B,eAAe,U","file":"static/js/main.fe1b4ce7.chunk.js","sourcesContent":["import React from 'react'\nimport '../styles/SignIn.css'\nimport { Formik } from 'formik'\nimport * as Yup from 'yup'\nimport { vEmail, vPassword } from '../utils/validation'\n\nclass SignIn extends React.Component{\n  render(){\n    return (<div className=\"signin\">\n      <div className=\"signin__wrapper\">\n        <div className=\"signin__form\">\n          <Formik\n          initialValues={{\n            email:\"\",\n            password:\"\"\n          }}\n          validationSchema={ Yup.object({\n            email: vEmail(),\n            password: vPassword()\n          })}\n          onSubmit={(values) => {\n            this.props.signIn(values)\n          }}\n          >\n            {props => <form onSubmit={props.handleSubmit}>\n              <input id=\"email\"\n              defaultValue={props.values.email}\n              name=\"email\" \n              type=\"email\"\n              onChange={props.handleChange} /><br />\n              <input id=\"password\"\n              defaultValue={props.values.password}\n              name=\"password\" \n              type=\"password\"\n              onChange={props.handleChange} /><br />\n              <button className=\"submit__btn\" type=\"submit\"\n              >LOGIN</button><br />\n            </form>}\n          </Formik>\n        </div>\n        <div className=\"signin__register\">\n          <p>Not registered? \n          <span className=\"signin__register__create\"> Create an account</span>\n          </p>\n        </div>\n      </div>\n    </div>)\n  }\n}\n\nexport default SignIn","// 3초 후에 타이틀 바꾸기 - React Hooks\n\nimport React, { useState, useEffect } from 'react'\n\nconst useTitle = initialTitle => {\n    // \"개발 중...\"으로 초기화 된 title을 생성!\n    // + setTitle이라고 하는 갱신함수를 생성!\n    const [title, setTitle] = useState(initialTitle)\n    const updateTitle = () => {\n        const htmlTitle = document.querySelector('title')\n        htmlTitle.textContent = title\n    }\n    useEffect(updateTitle, [title]) // title이 바뀔 때마다 updateTitle 발동!\n    return setTitle\n}\n\nconst Title = () => {\n    // title을 \"개발중...\"으로 바꾼 다음\n    // title을 변경해주는 기능을 반환 받아서 titleUpdater에 대입!\n    const titleUpdater = useTitle(\"개발 중... ㅠㅠ\")\n    setInterval(() => titleUpdater(\"한국 프로기사협회 리그 대국결과\"), 3000)\n    return \"\";\n}\n\nexport default Title;","import React from 'react'\nimport { observer, inject } from 'mobx-react'\nimport \"../styles/Header.css\"\nimport \"../styles/Main.css\"\nimport \"../styles/Footer.css\"\nimport Title from \"./Title\"\n\n@inject('userStore')\n@observer\nclass Main extends React.Component{\n  render(){\n    const { userStore } = this.props\n    const { usermail } = userStore\n    return (<div>\n      <header>\n        {<Title />}\n        <img className=\"logo\"></img>\n        <div className=\"bottom\">\n          {/* <h3>{usermail}</h3> */}\n          <p> \n            한국 프로기사협회 리그 <br />대국결과\n          </p>\n          <nav class=\"ul_box\">\n            <ul>\n              <li>1조</li>\n              <li>2조</li>\n              <li>3조</li>\n              <li>4조</li>\n              <li>5조</li>\n              <li>6조</li>\n              <br />\n              <li><a href=\"https://bit.ly/3rd_ProBaduk\" target=\"_black\" className=\"sheet\">대국결과_스프레드시트</a></li>\n            </ul>\n\n          </nav>\n        </div>\n      </header>\n    \n      <main>\n        <section className=\"movie\">\n          <div className=\"wrapper\">\n            <div className=\"movie__header\">\n              <h5>NiziU 『Make you happy』 M/V</h5>\n              <h6>JYP Entertainment</h6>\n            </div>\n            <div className=\"movie__video\">\n              <iframe width=\"640\" height=\"460\" src=\"https://www.youtube.com/embed/QW28YKqdxe0\" frameborder=\"0\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen></iframe>\n            </div>\n          </div>\n        </section>\n        <section className=\"movie\">\n          <div className=\"wrapper\">\n            <div className=\"movie__header\">\n              <h5>[NIZI Project] 最終対決 マコチーム Make you happy NiziU</h5>\n              <h6>Rainbow Factory</h6>\n            </div>\n            <div className=\"movie__video\">\n              <iframe width=\"640\" height=\"460\" src=\"https://www.youtube.com/embed/QO60VZHh55s\" frameborder=\"0\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen></iframe>\n            </div>\n          </div>\n        </section>\n        <section className=\"movie\">\n          <div className=\"wrapper\">\n            <div className=\"movie__header\">\n              <h5>[NiziU]生放送で音を外したことを告白するマユカちゃん</h5>\n              <h6>candy girl</h6>\n            </div>\n            <div className=\"movie__video\">\n              <iframe width=\"640\" height=\"460\" src=\"https://www.youtube.com/embed/X6H_l5MmMoQ\" frameborder=\"0\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen></iframe>\n            </div>\n          </div>\n        </section>\n      \n        <footer>\n          <p><strong>관리자: 한국 프로기사협회 박성현 팀장</strong></p>\n        </footer>\n      </main>\n      </div>)\n    }\n  }\n\nexport default Main","import React from 'react';\nimport SignIn from './components/SignIn'\nimport Main from './components/Main'\nimport './App.css'\nimport { observer, inject } from 'mobx-react'\n/*\n@inject('userStore')\n@observer\n*/\nclass App extends React.Component{\n  render(){\n    return(\n    <div className=\"content__container\"><Main /></div>\n  )}\n}\n  /*constructor(props){\n    super(props)\n    this.state = {\n      isSignIn : false,\n    }\n  }\n\n  // signIn 컴포넌트에서 formik을 통한 로그인을 성공하면 isSignIn을 true로 만든다!\n  signIn = (values) => {\n    const { email } = values;\n    const { userStore } = this.props\n    userStore.setUsermail(email)\n    this.setState({\n      isSignIn: true\n    })\n  }\n\n\n  render(){\n    const { isSignIn } = this.state\n    return (\n      isSignIn ? <div className=\"content__container\">\n      <Main />\n    </div> : <div className=\"signin__container\">\n      <SignIn signIn={this.signIn} />\n    </div>)\n  }\n}*/\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { Provider } from 'mobx-react'\nimport { UserStore } from './stores/UserStore'\n\nconst userStore = new UserStore()\n\nReactDOM.render(\n  <Provider userStore={userStore}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);","import { observable, action } from 'mobx'\n\nexport class UserStore{\n\n  /*\n   로그인 페이지에서는 사용자 계정명을 저장하고 \n   본 페이지에서는 사용자 계정명을 표시하고\n  */\n  @observable usermail = \"\"\n\n  @action setUsermail = (usermail) => {\n    this.usermail = usermail\n  }\n}"],"sourceRoot":""}